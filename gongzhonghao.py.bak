from flask import Flask, request
from flask_cors import *
import hashlib
from weixin_app import handel
from weixin_app import receive
from weixin_app import reply
from msg_crypto.WXBizMsgCrypt import WXBizMsgCrypt

app = Flask(__name__)
CORS(app, supports_credentials=True)

# 型男助理
appid = 'wx1a5d1d7cd4fedd7b'
encodingAESKey = "B56slIjnkNC0V7QiP3w0OUXdnXBLdhXTEvkVRXnfQNo"
# BonjourAI
# appid = 'wxe76eb9f73643f074'
# encodingAESKey = "mrr07UAiXDxspQ7AqMelrGR3NmRYGn1VpzXptocj9i2"
# 型男撩妹恋爱助理
# appid = 'wx5b56950938b33ae6'
# encodingAESKey = "VAv3FxeVI1s9ApaOPK0KgicXri71AzurV79ml2SHSN8"
token = 'abcdef'

HD = handel.Handel()


@app.route("/", methods=["GET", "POST"])
def index():
    return "ok"


@app.route("/xingnanzhuli", methods=["GET", "POST"])
def xingnanzhuli():
    if request.method == "GET":
        signature = request.args.get('signature')
        timestamp = request.args.get('timestamp')
        nonce = request.args.get('nonce')
        echostr = request.args.get('echostr')
        # print(echostr)
        return echostr
        data = [token, timestamp, nonce]
        data.sort()
        sha1 = hashlib.sha1()
        map(sha1.update, data)
        hashcode = sha1.hexdigest()
        if hashcode == signature:
            return echostr
        else:
            return echostr
    elif request.method == 'POST':
        rec_xml = request.stream.read()
        if request.values.get('encrypt_type'):
            encrypt_type = request.values.get('encrypt_type')
            if encrypt_type == 'aes':
                timestamp = request.values.get('timestamp')
                nonce = request.values.get('nonce')
                msg_signature = request.values.get('msg_signature')
                encrypt_decrypt = WXBizMsgCrypt(token, encodingAESKey, appid)
                (ret, decrypt_xml) = encrypt_decrypt.DecryptMsg(rec_xml, msg_signature, timestamp, nonce)
                recMsg = receive.parse_xml(decrypt_xml)
                repMsg = HD.handel_msg(recMsg)
                xml = repMsg.send()
                (ret, encrypt_xml) = encrypt_decrypt.EncryptMsg(xml, nonce)
                return encrypt_xml
        else:
            recMsg = receive.parse_xml(rec_xml)
            repMsg = handel.handel_msg(recMsg)
            rep_xml = repMsg.send()
            return rep_xml


if __name__ == "__main__":
    app.run(host='0.0.0.0', port=80, threaded=True, processes=1)
